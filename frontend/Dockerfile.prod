# Build stage
FROM node:20-alpine as build

WORKDIR /usr/src/app

# Copia package.json e package-lock.json
COPY package*.json ./

# Installa le dipendenze
RUN npm install

# Copia il resto del codice sorgente
COPY . .

# Build dell'applicazione
RUN npm run build

# Production stage
FROM nginx:alpine

# Crea directory per i certificati SSL
RUN mkdir -p /etc/nginx/ssl

# Copia i file buildati nella directory di nginx
COPY --from=build /usr/src/app/dist /usr/share/nginx/html

# Copia i certificati SSL (da aggiungere durante il docker build o tramite volume)
COPY ssl/cert.pem /etc/nginx/ssl/cert.pem
COPY ssl/key.pem /etc/nginx/ssl/key.pem

# Copia il template di configurazione nginx e lo script di configurazione
COPY nginx.conf.template /etc/nginx/nginx.conf.template
COPY configure-nginx.sh /configure-nginx.sh
RUN chmod +x /configure-nginx.sh

# Esponi porte HTTP e HTTPS
EXPOSE 80
EXPOSE 443

# Usa lo script di configurazione come entrypoint
CMD ["/configure-nginx.sh"]